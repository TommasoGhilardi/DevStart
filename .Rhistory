glue("**Outliers**<br>Identifies influential observations using Cook's distance. Points beyond the dashed lines are outliers that may excessively impact model estimates, warranting further investigation or potential removal."),
glue("**Normality of residuals**<br>Uses Q-Q plots to assess if residuals follow a normal distribution. Points should align with the reference line; deviations suggest the model poorly predicts certain outcome ranges, potentially violating normality assumptions.")
)
)
# Create the gt table, apply the custom theme, and add additional styling
table <- gt(data) %>%
fmt_markdown(columns = everything()) %>%
gt_theme_nytimes()() %>%
# Hide the headers by setting empty labels
cols_label(
Column1 = "",
Column2 = ""
) %>%
# Add borders around all cells
tab_style(
style = list(
cell_borders(sides = "all", color = "black", weight = px(1))
),
locations = cells_body()
) %>%
# Hide column labels
tab_options(
column_labels.hidden = TRUE
)
# Load necessary packages
library(gt)
library(gtExtras)
library(glue)
library(dplyr)
# Create a dataframe that resembles the content of the image
data <- data.frame(
Column1 = c(
glue("**Posterior predictive checks**<br>Compare simulated data from the fitted model to actual data. This reveals systematic discrepancies, helping assess if the model captures key data features and if the chosen distribution family is appropriate."),
glue("**Homoscedasticity/Homogeneity of variance**<br>Checks for homoscedasticity (constant variance). Residuals should spread evenly around a horizontal line across all predictor values. Uneven spread suggests variance inconsistencies, potentially requiring model adjustments."),
glue("**Multi-Collinearity**<br>Evaluates predictor independence. High collinearity indicates redundant predictors or possible unobserved variables influencing multiple predictors, which can affect interpretation and model stability.")
),
Column2 = c(
glue("**Linearity**<br>Checks if predictors have a linear relationship with the outcome. A straight, horizontal line suggests the model specification is appropriate. Curved or sloped lines indicate potential non-linear relationships, signaling the need for model adjustments."),
glue("**Outliers**<br>Identifies influential observations using Cook's distance. Points beyond the dashed lines are outliers that may excessively impact model estimates, warranting further investigation or potential removal."),
glue("**Normality of residuals**<br>Uses Q-Q plots to assess if residuals follow a normal distribution. Points should align with the reference line; deviations suggest the model poorly predicts certain outcome ranges, potentially violating normality assumptions.")
)
)
# Create the gt table, apply the custom theme, and add additional styling
table <- gt(data) %>%
fmt_markdown(columns = everything()) %>%
gt_theme_pff() %>%
# Hide the headers by setting empty labels
cols_label(
Column1 = "",
Column2 = ""
) %>%
# Add borders around all cells
tab_style(
style = list(
cell_borders(sides = "all", color = "black", weight = px(1))
),
locations = cells_body()
) %>%
# Hide column labels
tab_options(
column_labels.hidden = TRUE
)
# Print the table
table
# Load necessary packages
library(gt)
library(gtExtras)
library(glue)
library(dplyr)
# Create a dataframe that resembles the content of the image
data <- data.frame(
Column1 = c(
glue("**Posterior predictive checks**<br>Compare simulated data from the fitted model to actual data. This reveals systematic discrepancies, helping assess if the model captures key data features and if the chosen distribution family is appropriate."),
glue("**Homoscedasticity/Homogeneity of variance**<br>Checks for homoscedasticity (constant variance). Residuals should spread evenly around a horizontal line across all predictor values. Uneven spread suggests variance inconsistencies, potentially requiring model adjustments."),
glue("**Multi-Collinearity**<br>Evaluates predictor independence. High collinearity indicates redundant predictors or possible unobserved variables influencing multiple predictors, which can affect interpretation and model stability.")
),
Column2 = c(
glue("**Linearity**<br>Checks if predictors have a linear relationship with the outcome. A straight, horizontal line suggests the model specification is appropriate. Curved or sloped lines indicate potential non-linear relationships, signaling the need for model adjustments."),
glue("**Outliers**<br>Identifies influential observations using Cook's distance. Points beyond the dashed lines are outliers that may excessively impact model estimates, warranting further investigation or potential removal."),
glue("**Normality of residuals**<br>Uses Q-Q plots to assess if residuals follow a normal distribution. Points should align with the reference line; deviations suggest the model poorly predicts certain outcome ranges, potentially violating normality assumptions.")
)
)
# Create the gt table, apply the custom theme, and add additional styling
table <- gt(data) %>%
fmt_markdown(columns = everything()) %>%
gt_theme_nytimes() %>%
# Hide the headers by setting empty labels
cols_label(
Column1 = "",
Column2 = ""
) %>%
# Add borders around all cells
tab_style(
style = list(
cell_borders(sides = "all", color = "black", weight = px(1))
),
locations = cells_body()
) %>%
# Hide column labels
tab_options(
column_labels.hidden = TRUE
)
# Print the table
table
# Create the gt table, apply the custom theme, and add additional styling
table <- gt(data) %>%
fmt_markdown(columns = everything()) %>%
gt_theme_espn() %>%
# Hide the headers by setting empty labels
cols_label(
Column1 = "",
Column2 = ""
) %>%
# Add borders around all cells
tab_style(
style = list(
cell_borders(sides = "all", color = "black", weight = px(1))
),
locations = cells_body()
) %>%
# Hide column labels
tab_options(
column_labels.hidden = TRUE
)
# Load necessary packages
library(gt)
library(gtExtras)
library(glue)
library(dplyr)
# Create a dataframe that resembles the content of the image
data <- data.frame(
Column1 = c(
glue("**Posterior predictive checks**<br>Compare simulated data from the fitted model to actual data. This reveals systematic discrepancies, helping assess if the model captures key data features and if the chosen distribution family is appropriate."),
glue("**Homoscedasticity/Homogeneity of variance**<br>Checks for homoscedasticity (constant variance). Residuals should spread evenly around a horizontal line across all predictor values. Uneven spread suggests variance inconsistencies, potentially requiring model adjustments."),
glue("**Multi-Collinearity**<br>Evaluates predictor independence. High collinearity indicates redundant predictors or possible unobserved variables influencing multiple predictors, which can affect interpretation and model stability.")
),
Column2 = c(
glue("**Linearity**<br>Checks if predictors have a linear relationship with the outcome. A straight, horizontal line suggests the model specification is appropriate. Curved or sloped lines indicate potential non-linear relationships, signaling the need for model adjustments."),
glue("**Outliers**<br>Identifies influential observations using Cook's distance. Points beyond the dashed lines are outliers that may excessively impact model estimates, warranting further investigation or potential removal."),
glue("**Normality of residuals**<br>Uses Q-Q plots to assess if residuals follow a normal distribution. Points should align with the reference line; deviations suggest the model poorly predicts certain outcome ranges, potentially violating normality assumptions.")
)
)
# Create the gt table, apply the custom theme, and add additional styling
table <- gt(data) %>%
fmt_markdown(columns = everything()) %>%
gt_theme_espn() %>%
# Hide the headers by setting empty labels
cols_label(
Column1 = "",
Column2 = ""
) %>%
# Add borders around all cells
tab_style(
style = list(
cell_borders(sides = "all", color = "black", weight = px(1))
),
locations = cells_body()
) %>%
# Hide column labels
tab_options(
column_labels.hidden = TRUE
)
# Print the table
table
# Load necessary packages
library(gt)
library(gtExtras)
library(glue)
library(dplyr)
# Create a dataframe that resembles the content of the image
data <- data.frame(
Column1 = c(
glue("**Posterior predictive checks**<br>Compare simulated data from the fitted model to actual data. This reveals systematic discrepancies, helping assess if the model captures key data features and if the chosen distribution family is appropriate."),
glue("**Homoscedasticity/Homogeneity of variance**<br>Checks for homoscedasticity (constant variance). Residuals should spread evenly around a horizontal line across all predictor values. Uneven spread suggests variance inconsistencies, potentially requiring model adjustments."),
glue("**Multi-Collinearity**<br>Evaluates predictor independence. High collinearity indicates redundant predictors or possible unobserved variables influencing multiple predictors, which can affect interpretation and model stability.")
),
Column2 = c(
glue("**Linearity**<br>Checks if predictors have a linear relationship with the outcome. A straight, horizontal line suggests the model specification is appropriate. Curved or sloped lines indicate potential non-linear relationships, signaling the need for model adjustments."),
glue("**Outliers**<br>Identifies influential observations using Cook's distance. Points beyond the dashed lines are outliers that may excessively impact model estimates, warranting further investigation or potential removal."),
glue("**Normality of residuals**<br>Uses Q-Q plots to assess if residuals follow a normal distribution. Points should align with the reference line; deviations suggest the model poorly predicts certain outcome ranges, potentially violating normality assumptions.")
)
)
# Create the gt table, apply the custom theme, and add additional styling
table <- gt(data) %>%
fmt_markdown(columns = everything()) %>%
# Hide the headers by setting empty labels
cols_label(
Column1 = "",
Column2 = ""
) %>%
# Add borders around all cells
tab_style(
style = list(
cell_borders(sides = "all", color = "black", weight = px(1))
),
locations = cells_body()
) %>%
# Hide column labels
tab_options(
column_labels.hidden = TRUE
)
# Print the table
table
#| echo: false
#| warning: false
# Load necessary packages
library(gt)
library(gtExtras)
library(glue)
# Create a dataframe that resembles the content of the image
data <- data.frame(
Column1 = c(
glue("**Posterior predictive checks**<br>Compare simulated data from the fitted model to actual data. This reveals systematic discrepancies, helping assess if the model captures key data features and if the chosen distribution family is appropriate."),
glue("**Homoscedasticity/Homogeneity of variance**<br>Checks for homoscedasticity (constant variance). Residuals should spread evenly around a horizontal line across all predictor values. Uneven spread suggests variance inconsistencies, potentially requiring model adjustments."),
glue("**Multi-Collinearity**<br>Evaluates predictor independence. High collinearity indicates redundant predictors or possible unobserved variables influencing multiple predictors, which can affect interpretation and model stability.")
),
Column2 = c(
glue("**Linearity**<br>Checks if predictors have a linear relationship with the outcome. A straight, horizontal line suggests the model specification is appropriate. Curved or sloped lines indicate potential non-linear relationships, signaling the need for model adjustments."),
glue("**Outliers**<br>Identifies influential observations using Cook's distance. Points beyond the dashed lines are outliers that may excessively impact model estimates, warranting further investigation or potential removal."),
glue("**Normality of residuals**<br>Uses Q-Q plots to assess if residuals follow a normal distribution. Points should align with the reference line; deviations suggest the model poorly predicts certain outcome ranges, potentially violating normality assumptions.")
)
)
# Create the gt table, apply the custom theme, and add additional styling
table <- gt(data) %>%
fmt_markdown(columns = everything()) %>%
gt_theme_nytimes() %>%
# Hide the headers by setting empty labels
cols_label(
Column1 = "",
Column2 = ""
) %>%
# Add borders around all cells
tab_style(
style = cell_borders(sides = "all", color = "black", weight = px(1)),
locations = cells_body()
) %>%
# Add borders around the entire table
tab_options(
table.border.top.style = "solid",
table.border.top.color = "black",
table.border.top.width = px(1),
table.border.bottom.style = "solid",
table.border.bottom.color = "black",
table.border.bottom.width = px(1),
table_body.border.left.style = "solid",
table_body.border.left.color = "black",
table_body.border.left.width = px(1),
table_body.border.right.style = "solid",
table_body.border.right.color = "black",
table_body.border.right.width = px(1),
column_labels.hidden = TRUE
)
#| echo: false
#| warning: false
# Load necessary packages
library(gt)
library(gtExtras)
library(glue)
# Create a dataframe that resembles the content of the image
data <- data.frame(
Column1 = c(
glue("**Posterior predictive checks**<br>Compare simulated data from the fitted model to actual data. This reveals systematic discrepancies, helping assess if the model captures key data features and if the chosen distribution family is appropriate."),
glue("**Homoscedasticity/Homogeneity of variance**<br>Checks for homoscedasticity (constant variance). Residuals should spread evenly around a horizontal line across all predictor values. Uneven spread suggests variance inconsistencies, potentially requiring model adjustments."),
glue("**Multi-Collinearity**<br>Evaluates predictor independence. High collinearity indicates redundant predictors or possible unobserved variables influencing multiple predictors, which can affect interpretation and model stability.")
),
Column2 = c(
glue("**Linearity**<br>Checks if predictors have a linear relationship with the outcome. A straight, horizontal line suggests the model specification is appropriate. Curved or sloped lines indicate potential non-linear relationships, signaling the need for model adjustments."),
glue("**Outliers**<br>Identifies influential observations using Cook's distance. Points beyond the dashed lines are outliers that may excessively impact model estimates, warranting further investigation or potential removal."),
glue("**Normality of residuals**<br>Uses Q-Q plots to assess if residuals follow a normal distribution. Points should align with the reference line; deviations suggest the model poorly predicts certain outcome ranges, potentially violating normality assumptions.")
)
)
# Create the gt table, apply the custom theme, and add additional styling
table <- gt(data) %>%
fmt_markdown(columns = everything()) %>%
gt_theme_nytimes() %>%
# Hide the headers by setting empty labels
cols_label(
Column1 = "",
Column2 = ""
) %>%
# Add borders around all cells
tab_style(
style = cell_borders(sides = "all", color = "black", weight = px(1)),
locations = cells_body()
) %>%
# Add borders around the entire table
tab_style(
style = cell_borders(sides = "all", color = "black", weight = px(1)),
locations = list(
cells_column_labels(),
cells_table()
)
) %>%
# Hide column labels
tab_options(
column_labels.hidden = TRUE
)
# Load necessary packages
library(gt)
library(gtExtras)
library(glue)
# Create a dataframe that resembles the content of the image
data <- data.frame(
Column1 = c(
glue("**Posterior predictive checks**<br>Compare simulated data from the fitted model to actual data. This reveals systematic discrepancies, helping assess if the model captures key data features and if the chosen distribution family is appropriate."),
glue("**Homoscedasticity/Homogeneity of variance**<br>Checks for homoscedasticity (constant variance). Residuals should spread evenly around a horizontal line across all predictor values. Uneven spread suggests variance inconsistencies, potentially requiring model adjustments."),
glue("**Multi-Collinearity**<br>Evaluates predictor independence. High collinearity indicates redundant predictors or possible unobserved variables influencing multiple predictors, which can affect interpretation and model stability.")
),
Column2 = c(
glue("**Linearity**<br>Checks if predictors have a linear relationship with the outcome. A straight, horizontal line suggests the model specification is appropriate. Curved or sloped lines indicate potential non-linear relationships, signaling the need for model adjustments."),
glue("**Outliers**<br>Identifies influential observations using Cook's distance. Points beyond the dashed lines are outliers that may excessively impact model estimates, warranting further investigation or potential removal."),
glue("**Normality of residuals**<br>Uses Q-Q plots to assess if residuals follow a normal distribution. Points should align with the reference line; deviations suggest the model poorly predicts certain outcome ranges, potentially violating normality assumptions.")
)
)
# Create the gt table, apply the custom theme, and add additional styling
table <- gt(data) %>%
fmt_markdown(columns = everything()) %>%
gt_theme_nytimes() %>%
# Hide the headers by setting empty labels
cols_label(
Column1 = "",
Column2 = ""
) %>%
# Add borders around all cells
tab_style(
style = cell_borders(sides = "all", color = "black", weight = px(1)),
locations = cells_body()
) %>%
# Add borders around the entire table
tab_options(
table.border.top.style = "solid",
table.border.top.color = "black",
table.border.top.width = px(1),
table.border.bottom.style = "solid",
table.border.bottom.color = "black",
table.border.bottom.width = px(1),
table.border.left.style = "solid",
table.border.left.color = "black",
table.border.left.width = px(1),
table.border.right.style = "solid",
table.border.right.color = "black",
table.border.right.width = px(1),
column_labels.hidden = TRUE
)
# Print the table
table
# Load necessary packages
library(gt)
library(gtExtras)
library(glue)
# Create a dataframe that resembles the content of the image
data <- data.frame(
Column1 = c(
glue("**Posterior predictive checks**<br>Compare simulated data from the fitted model to actual data. This reveals systematic discrepancies, helping assess if the model captures key data features and if the chosen distribution family is appropriate."),
glue("**Homoscedasticity/Homogeneity of variance**<br>Checks for homoscedasticity (constant variance). Residuals should spread evenly around a horizontal line across all predictor values. Uneven spread suggests variance inconsistencies, potentially requiring model adjustments."),
glue("**Multi-Collinearity**<br>Evaluates predictor independence. High collinearity indicates redundant predictors or possible unobserved variables influencing multiple predictors, which can affect interpretation and model stability.")
),
Column2 = c(
glue("**Linearity**<br>Checks if predictors have a linear relationship with the outcome. A straight, horizontal line suggests the model specification is appropriate. Curved or sloped lines indicate potential non-linear relationships, signaling the need for model adjustments."),
glue("**Outliers**<br>Identifies influential observations using Cook's distance. Points beyond the dashed lines are outliers that may excessively impact model estimates, warranting further investigation or potential removal."),
glue("**Normality of residuals**<br>Uses Q-Q plots to assess if residuals follow a normal distribution. Points should align with the reference line; deviations suggest the model poorly predicts certain outcome ranges, potentially violating normality assumptions.")
)
)
# Create the gt table, apply the custom theme, and add additional styling
table <- gt(data) %>%
fmt_markdown(columns = everything()) %>%
# Hide the headers by setting empty labels
cols_label(
Column1 = "",
Column2 = ""
) %>%
# Add borders around all cells
tab_style(
style = cell_borders(sides = "all", color = "black", weight = px(1)),
locations = cells_body()
) %>%
# Add borders around the entire table
tab_options(
table.border.top.style = "solid",
table.border.top.color = "black",
table.border.top.width = px(1),
table.border.bottom.style = "solid",
table.border.bottom.color = "black",
table.border.bottom.width = px(1),
table.border.left.style = "solid",
table.border.left.color = "black",
table.border.left.width = px(1),
table.border.right.style = "solid",
table.border.right.color = "black",
table.border.right.width = px(1),
column_labels.hidden = TRUE
)
# Print the table
table
#| echo: false
#| warning: false
# Load necessary packages
library(gt)
library(gtExtras)
library(glue)
# Create a dataframe that resembles the content of the image
data <- data.frame(
Column1 = c(
glue("**Posterior predictive checks**<br>Compare simulated data from the fitted model to actual data. This reveals systematic discrepancies, helping assess if the model captures key data features and if the chosen distribution family is appropriate."),
glue("**Homoscedasticity/Homogeneity of variance**<br>Checks for homoscedasticity (constant variance). Residuals should spread evenly around a horizontal line across all predictor values. Uneven spread suggests variance inconsistencies, potentially requiring model adjustments."),
glue("**Multi-Collinearity**<br>Evaluates predictor independence. High collinearity indicates redundant predictors or possible unobserved variables influencing multiple predictors, which can affect interpretation and model stability.")
),
Column2 = c(
glue("**Linearity**<br>Checks if predictors have a linear relationship with the outcome. A straight, horizontal line suggests the model specification is appropriate. Curved or sloped lines indicate potential non-linear relationships, signaling the need for model adjustments."),
glue("**Outliers**<br>Identifies influential observations using Cook's distance. Points beyond the dashed lines are outliers that may excessively impact model estimates, warranting further investigation or potential removal."),
glue("**Normality of residuals**<br>Uses Q-Q plots to assess if residuals follow a normal distribution. Points should align with the reference line; deviations suggest the model poorly predicts certain outcome ranges, potentially violating normality assumptions.")
)
)
# Create the gt table, apply the custom theme, and add additional styling
table <- gt(data) %>%
fmt_markdown(columns = everything()) %>%
gt_theme_nytimes() %>%
# Add a title to the table
tab_header(
title = md("**Model Diagnostic Checks**")
) %>%
# Hide the headers by setting empty labels
cols_label(
Column1 = "",
Column2 = ""
) %>%
# Add borders around all cells
tab_style(
style = cell_borders(sides = "all", color = "black", weight = px(1)),
locations = cells_body()
) %>%
# Add borders around the entire table
tab_options(
table.border.top.style = "solid",
table.border.top.color = "black",
table.border.top.width = px(1),
table.border.bottom.style = "solid",
table.border.bottom.color = "black",
table.border.bottom.width = px(1),
table.border.left.style = "solid",
table.border.left.color = "black",
table.border.left.width = px(1),
table.border.right.style = "solid",
table.border.right.color = "black",
table.border.right.width = px(1),
column_labels.hidden = TRUE
)
# Print the table
table
# Load necessary packages
library(gt)
library(gtExtras)
library(glue)
# Create a dataframe that resembles the content of the image
data <- data.frame(
Column1 = c(
glue("**Posterior predictive checks**<br>Compare simulated data from the fitted model to actual data. This reveals systematic discrepancies, helping assess if the model captures key data features and if the chosen distribution family is appropriate."),
glue("**Homoscedasticity/Homogeneity of variance**<br>Checks for homoscedasticity (constant variance). Residuals should spread evenly around a horizontal line across all predictor values. Uneven spread suggests variance inconsistencies, potentially requiring model adjustments."),
glue("**Multi-Collinearity**<br>Evaluates predictor independence. High collinearity indicates redundant predictors or possible unobserved variables influencing multiple predictors, which can affect interpretation and model stability.")
),
Column2 = c(
glue("**Linearity**<br>Checks if predictors have a linear relationship with the outcome. A straight, horizontal line suggests the model specification is appropriate. Curved or sloped lines indicate potential non-linear relationships, signaling the need for model adjustments."),
glue("**Outliers**<br>Identifies influential observations using Cook's distance. Points beyond the dashed lines are outliers that may excessively impact model estimates, warranting further investigation or potential removal."),
glue("**Normality of residuals**<br>Uses Q-Q plots to assess if residuals follow a normal distribution. Points should align with the reference line; deviations suggest the model poorly predicts certain outcome ranges, potentially violating normality assumptions.")
)
)
# Create the gt table, apply the custom theme, and add additional styling
table <- gt(data) %>%
fmt_markdown(columns = everything()) %>%
gt_theme_nytimes() %>%
# Add a title to the table and ensure it is centered
tab_header(
title = md("**Model Diagnostic Checks**")
) %>%
tab_style(
style = cell_text(align = "center"),
locations = cells_title(groups = "title")
) %>%
# Hide the headers by setting empty labels
cols_label(
Column1 = "",
Column2 = ""
) %>%
# Add borders around all cells
tab_style(
style = cell_borders(sides = "all", color = "black", weight = px(1)),
locations = cells_body()
) %>%
# Add borders around the entire table
tab_options(
table.border.top.style = "solid",
table.border.top.color = "black",
table.border.top.width = px(1),
table.border.bottom.style = "solid",
table.border.bottom.color = "black",
table.border.bottom.width = px(1),
table.border.left.style = "solid",
table.border.left.color = "black",
table.border.left.width = px(1),
table.border.right.style = "solid",
table.border.right.color = "black",
table.border.right.width = px(1),
column_labels.hidden = TRUE
)
# Print the table
table
check_residuals(mod)
plot(check_residuals(mod))
check_posterior_predictions(mod)
check_predictions(mod)
check_normality(mod)
check_homogeneity(mod)
