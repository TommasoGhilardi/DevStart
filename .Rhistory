geom_line(aes(y = PupilL, color = 'Pupil Left'), lwd = 1.2) +
geom_vline(aes(xintercept = 0), linetype = 'dashed', color = 'black', lwd = 1.2) +
facet_wrap(~Subject) +
ylim(1, 6) +
scale_color_manual(values = c('Pupil Right' = '#4A6274', 'Pupil Left' = '#E2725A')) +
theme_bw(base_size = 35) +
theme(
legend.position = 'bottom',
legend.title = element_blank()) +
guides(color = guide_legend(override.aes = list(lwd = 20)))
#| message: false
#| warning: false
# Trial_data[Trial_data$Subject == 'Subject_1' & Trial_data$TrialN==1,]$PupilL = NA
# Trial_data[Trial_data$Subject == 'Subject_1' & Trial_data$TrialN==1,]$PupilR = NA
# Trial_data[Trial_data$Subject == 'Subject_4' & Trial_data$TrialN==1,]$PupilL = NA
# Trial_data[Trial_data$Subject == 'Subject_4' & Trial_data$TrialN==1,]$PupilR = NA
PupilR_data = make_pupillometryr_data(data = Trial_data,
subject = Subject,
trial = TrialN,
time = Time,
condition = Events)
#| message: false
#| warning: false
#| fig-height: 25
#| fig-width: 40
plot(PupilR_data, pupil = PupilL, group = 'condition', geom = 'line') +
theme_bw(base_size = 45) +
theme(
legend.position = 'bottom',
legend.title = element_blank()) +
guides(color = guide_legend(override.aes = list(lwd = 20)))
#| error: true
#| message: false
#| warning: false
Regressed_data <- regress_data(data = PupilR_data,
pupil1 = PupilL,
pupil2 = PupilR)
#| message: false
#| warning: false
# Filter the trial data
Trial_data <- Trial_data %>%
group_by(Subject, TrialN) %>%  # group by Subject and TrialN
filter(!all(is.na(PupilL) & is.na( PupilR))) %>% # filter out if both PupilR and PupilL are all NA
ungroup()  # Remove grouping
# Make pupilloemtryR data
PupilR_data = make_pupillometryr_data(data = Trial_data,
subject = Subject,
trial = TrialN,
time = Time,
condition = Events)
# Regress data
Regressed_data <- regress_data(data = PupilR_data,
pupil1 = PupilL,
pupil2 = PupilR)
#| message: true
#| warning: false
#| fig-height: 25
#| fig-width: 40
Mean_data <- calculate_mean_pupil_size(data = Regressed_data,
pupil1 = PupilL,
pupil2 = PupilR)
plot(Mean_data, pupil = mean_pupil, group = 'condition', geom = 'line')+
theme_bw(base_size = 45) +
theme(
legend.position = 'bottom',
legend.title = element_blank()) +
guides(color = guide_legend(override.aes = list(lwd = 20)))
#| message: false
#| warning: false
#| fig-height: 25
#| fig-width: 40
filtered_data <- filter_data(data = Mean_data,
pupil = mean_pupil,
filter = 'median',
degree = 11)
plot(filtered_data, pupil = mean_pupil, group = 'condition', geom = 'line')+
theme_bw(base_size = 45) +
theme(
legend.position = 'bottom',
legend.title = element_blank()) +
guides(color = guide_legend(override.aes = list(lwd = 20)))
#| message: false
#| warning: false
#| fig-height: 25
#| fig-width: 40
NewHz = 20
timebinSize = 1/NewHz
Downsampled_data <- downsample_time_data(data = filtered_data,
pupil = mean_pupil,
timebin_size = timebinSize,
option = 'median')
plot(Downsampled_data, pupil = mean_pupil, group = 'condition', geom = 'line') +
theme_bw(base_size = 45) +
theme(
legend.position = 'bottom',
legend.title = element_blank()) +
guides(color = guide_legend(override.aes = list(lwd = 20)))
Missing_data <- calculate_missing_data(Downsampled_data,
mean_pupil)
head(Missing_data, n=20)
#| message: false
#| warning: false
Clean_data <- clean_missing_data(Downsampled_data,
pupil = mean_pupil,
trial_threshold = .75,
subject_trial_threshold = .75)
#| message: false
#| warning: false
#| fig-height: 25
#| fig-width: 40
ggplot(Clean_data, aes(x = Time, y = mean_pupil, group = TrialN, color= Events))+
geom_line( lwd =1.2)+
geom_vline(aes(xintercept = 0), linetype= 'dashed', color = 'black', lwd =1.2)+
facet_wrap(~Subject)+
ylim(1,6)+
theme_bw(base_size = 45) +
theme(
legend.position = 'bottom',
legend.title = element_blank()) +
labs(y = 'Pupil Size')+
guides(color = guide_legend(override.aes = list(lwd = 20)))
#| message: false
#| warning: false
#| fig-height: 25
#| fig-width: 40
Int_data <- interpolate_data(data = Clean_data,
pupil = mean_pupil,
type = 'linear')
ggplot(Int_data, aes(x = Time, y = mean_pupil, group = TrialN, color = Events))+
geom_line(lwd =1.2)+
geom_vline(aes(xintercept = 0), linetype= 'dashed', color = 'black', lwd =1.2)+
facet_wrap(~Subject)+
ylim(1,6)+
theme_bw(base_size = 45) +
theme(
legend.position = 'bottom',
legend.title = element_blank()) +
labs(y = 'Pupil Size')+
guides(color = guide_legend(override.aes = list(lwd = 20)))
#| message: false
#| warning: false
#| fig-height: 25
#| fig-width: 40
Blink_data = detect_blinks_by_velocity(
Clean_data,
mean_pupil,
threshold = 0.1,
extend_forward = 50,
extend_back = 50)
ggplot(Blink_data, aes(x = Time, y = mean_pupil, group = TrialN, color=Events))+
geom_line(lwd =1.2)+
geom_vline(aes(xintercept = 0), linetype= 'dashed', color = 'black', lwd =1.2)+
facet_wrap(~Subject)+
ylim(1,6)+
theme_bw(base_size = 45) +
theme(
legend.position = 'bottom',
legend.title = element_blank()) +
labs(y = 'Pupil Size')+
guides(color = guide_legend(override.aes = list(lwd = 20)))
#| message: false
#| warning: false
#| fig-height: 25
#| fig-width: 40
Int_data <- interpolate_data(data = Blink_data,
pupil = mean_pupil,
type = 'linear')
ggplot(Int_data, aes(x = Time, y = mean_pupil, group = TrialN, color=Events))+
geom_line(lwd =1.2)+
geom_vline(aes(xintercept = 0), linetype= 'dashed', color = 'black', lwd =1.2)+
facet_wrap(~Subject)+
ylim(1,6)+
theme_bw(base_size = 45) +
theme(
legend.position = 'bottom',
legend.title = element_blank()) +
labs(y = 'Pupil Size')+
guides(color = guide_legend(override.aes = list(lwd = 20)))
#| message: false
#| warning: false
#| fig-height: 25
#| fig-width: 40
base_data <- baseline_data(data = Int_data,
pupil = mean_pupil,
start = -100,
stop = 0)
#| message: false
#| warning: false
#| fig-height: 25
#| fig-width: 40
One = plot(base_data, pupil = mean_pupil, group = 'condition')+
theme_bw(base_size = 45) +
theme(legend.position = 'none')
Two = ggplot(base_data, aes(x = Time, y = mean_pupil, group = TrialN, color = Events))+
geom_line(lwd =1.2)+
geom_vline(aes(xintercept = 0), linetype= 'dashed', color = 'black', lwd =1.2)+
facet_wrap(~Subject)+
theme_bw(base_size = 45) +
theme(
legend.position = 'bottom',
legend.title = element_blank()) +
labs(y = 'Pupil Size')+
guides(color = guide_legend(override.aes = list(lwd = 20)))
# Using patchwork to put the plot toghether
One / Two
#| echo: false
#| message: false
#| warning: false
setwd("C:\\Users\\tomma\\OneDrive - Birkbeck, University of London\\Personal\\Web\\DevStart\\resources\\Pupillometry")
library(PupillometryR)  # Library to process pupil signal
library(tidyverse)  # Library to wrangle dataframes
library(patchwork)
Raw_data = read.csv("..\\..\\resources\\Pupillometry\\PupilData.csv")
head(Raw_data) # database peak
#| warnings: false
#| fig-width: 20
#| fig-height: 10
ggplot(Raw_data, aes(x = Time, y = PupilR))+
geom_line(aes(y = PupilR, color = 'Pupil Right'), lwd = 1.2) +
geom_line(aes(y = PupilL, color = 'Pupil Left'), lwd = 1.2) +
geom_vline(data = Raw_data |> dplyr::filter(!is.na(Events)) , aes(xintercept = Time, color = Events), linetype = 'dashed') +
facet_wrap(~Subject)+
theme_bw(base_size = 35)+
ylim(1,6)+
scale_color_manual(values = c('Pupil Right' = '#4A6274', 'Pupil Left' = '#E2725A'))+
theme(legend.position = 'bottom') +
guides(color = guide_legend(override.aes = list(lwd = 20)))  # Make legend lines thicker
Events_to_keep = c('Circle','Square')
Events = filter(Raw_data, Events %in% Events_to_keep) # filter data
head(Events) # database peak
# Settings to cut events
Pre_stim = 100 # pre stimulus time
Post_stim = 2000 # post stimulus time
Fs = 300 # framerate
Time = seq(from = -Pre_stim, by=1000/Fs, length.out = (Pre_stim+Post_stim)/1000*300-1) # time vector
# create copy of the raw data
Trial_data = Raw_data
# Loop for each event of each subject
for (trial in 1:nrow(Events)){
# Extract the information
Sub = Events[trial, 'Subject']
Event = Events[trial, 'Events']
TrialN = Events[trial, 'TrialN']
Onset = Events[trial, 'Time']
# Find the rows to update based on subject and time
rows_to_update = which(Trial_data$Subject == Sub &
Trial_data$Time >= (Onset - Pre_stim) &
Trial_data$Time < (Onset + Post_stim))
# Repeat the values of interest for all the rows
Trial_data[rows_to_update, 'Time'] = Time
Trial_data[rows_to_update, 'Events'] = Event
Trial_data[rows_to_update, 'TrialN'] = TrialN
}
#| message: false
#| warning: false
Trial_data = Trial_data %>%
filter(Events %in% Events_to_keep)
#| message: false
#| warning: false
#| code-fold: true
#| fig-width: 40
#| fig-height: 25
#| fig-dpi: 300
ggplot(Trial_data, aes(x = Time, y = PupilR, group = TrialN)) +
geom_line(aes(y = PupilR, color = 'Pupil Right'), lwd = 1.2) +
geom_line(aes(y = PupilL, color = 'Pupil Left'), lwd = 1.2) +
geom_vline(aes(xintercept = 0), linetype = 'dashed', color = 'black', lwd = 1.2) +
facet_wrap(~Subject) +
ylim(1, 6) +
scale_color_manual(values = c('Pupil Right' = '#4A6274', 'Pupil Left' = '#E2725A')) +
theme_bw(base_size = 35) +
theme(
legend.position = 'bottom',
legend.title = element_blank()) +
guides(color = guide_legend(override.aes = list(lwd = 20)))
#| message: false
#| warning: false
# Trial_data[Trial_data$Subject == 'Subject_1' & Trial_data$TrialN==1,]$PupilL = NA
# Trial_data[Trial_data$Subject == 'Subject_1' & Trial_data$TrialN==1,]$PupilR = NA
# Trial_data[Trial_data$Subject == 'Subject_4' & Trial_data$TrialN==1,]$PupilL = NA
# Trial_data[Trial_data$Subject == 'Subject_4' & Trial_data$TrialN==1,]$PupilR = NA
PupilR_data = make_pupillometryr_data(data = Trial_data,
subject = Subject,
trial = TrialN,
time = Time,
condition = Events)
#| message: false
#| warning: false
#| fig-height: 25
#| fig-width: 40
plot(PupilR_data, pupil = PupilL, group = 'condition', geom = 'line') +
theme_bw(base_size = 45) +
theme(
legend.position = 'bottom',
legend.title = element_blank()) +
guides(color = guide_legend(override.aes = list(lwd = 20)))
#| error: true
#| message: false
#| warning: false
Regressed_data <- regress_data(data = PupilR_data,
pupil1 = PupilL,
pupil2 = PupilR)
#| message: false
#| warning: false
# Filter the trial data
Trial_data <- Trial_data %>%
group_by(Subject, TrialN) %>%  # group by Subject and TrialN
filter(!all(is.na(PupilL) & is.na( PupilR))) %>% # filter out if both PupilR and PupilL are all NA
ungroup()  # Remove grouping
# Make pupilloemtryR data
PupilR_data = make_pupillometryr_data(data = Trial_data,
subject = Subject,
trial = TrialN,
time = Time,
condition = Events)
# Regress data
Regressed_data <- regress_data(data = PupilR_data,
pupil1 = PupilL,
pupil2 = PupilR)
#| message: true
#| warning: false
#| fig-height: 25
#| fig-width: 40
Mean_data <- calculate_mean_pupil_size(data = Regressed_data,
pupil1 = PupilL,
pupil2 = PupilR)
plot(Mean_data, pupil = mean_pupil, group = 'condition', geom = 'line')+
theme_bw(base_size = 45) +
theme(
legend.position = 'bottom',
legend.title = element_blank()) +
guides(color = guide_legend(override.aes = list(lwd = 20)))
#| message: false
#| warning: false
#| fig-height: 25
#| fig-width: 40
filtered_data <- filter_data(data = Mean_data,
pupil = mean_pupil,
filter = 'median',
degree = 11)
plot(filtered_data, pupil = mean_pupil, group = 'condition', geom = 'line')+
theme_bw(base_size = 45) +
theme(
legend.position = 'bottom',
legend.title = element_blank()) +
guides(color = guide_legend(override.aes = list(lwd = 20)))
#| message: false
#| warning: false
#| fig-height: 25
#| fig-width: 40
NewHz = 20
timebinSize = 1/NewHz
Downsampled_data <- downsample_time_data(data = filtered_data,
pupil = mean_pupil,
timebin_size = timebinSize,
option = 'median')
plot(Downsampled_data, pupil = mean_pupil, group = 'condition', geom = 'line') +
theme_bw(base_size = 45) +
theme(
legend.position = 'bottom',
legend.title = element_blank()) +
guides(color = guide_legend(override.aes = list(lwd = 20)))
Missing_data <- calculate_missing_data(Downsampled_data,
mean_pupil)
head(Missing_data, n=20)
#| message: false
#| warning: false
Clean_data <- clean_missing_data(Downsampled_data,
pupil = mean_pupil,
trial_threshold = .75,
subject_trial_threshold = .75)
#| message: false
#| warning: false
#| fig-height: 25
#| fig-width: 40
ggplot(Clean_data, aes(x = Time, y = mean_pupil, group = TrialN, color= Events))+
geom_line( lwd =1.2)+
geom_vline(aes(xintercept = 0), linetype= 'dashed', color = 'black', lwd =1.2)+
facet_wrap(~Subject)+
ylim(1,6)+
theme_bw(base_size = 45) +
theme(
legend.position = 'bottom',
legend.title = element_blank()) +
labs(y = 'Pupil Size')+
guides(color = guide_legend(override.aes = list(lwd = 20)))
#| message: false
#| warning: false
#| fig-height: 25
#| fig-width: 40
Int_data <- interpolate_data(data = Clean_data,
pupil = mean_pupil,
type = 'linear')
ggplot(Int_data, aes(x = Time, y = mean_pupil, group = TrialN, color = Events))+
geom_line(lwd =1.2)+
geom_vline(aes(xintercept = 0), linetype= 'dashed', color = 'black', lwd =1.2)+
facet_wrap(~Subject)+
ylim(1,6)+
theme_bw(base_size = 45) +
theme(
legend.position = 'bottom',
legend.title = element_blank()) +
labs(y = 'Pupil Size')+
guides(color = guide_legend(override.aes = list(lwd = 20)))
#| message: false
#| warning: false
#| fig-height: 25
#| fig-width: 40
Blink_data = detect_blinks_by_velocity(
Clean_data,
mean_pupil,
threshold = 0.1,
extend_forward = 50,
extend_back = 50)
ggplot(Blink_data, aes(x = Time, y = mean_pupil, group = TrialN, color=Events))+
geom_line(lwd =1.2)+
geom_vline(aes(xintercept = 0), linetype= 'dashed', color = 'black', lwd =1.2)+
facet_wrap(~Subject)+
ylim(1,6)+
theme_bw(base_size = 45) +
theme(
legend.position = 'bottom',
legend.title = element_blank()) +
labs(y = 'Pupil Size')+
guides(color = guide_legend(override.aes = list(lwd = 20)))
#| message: false
#| warning: false
#| fig-height: 25
#| fig-width: 40
Int_data <- interpolate_data(data = Blink_data,
pupil = mean_pupil,
type = 'linear')
ggplot(Int_data, aes(x = Time, y = mean_pupil, group = TrialN, color=Events))+
geom_line(lwd =1.2)+
geom_vline(aes(xintercept = 0), linetype= 'dashed', color = 'black', lwd =1.2)+
facet_wrap(~Subject)+
ylim(1,6)+
theme_bw(base_size = 45) +
theme(
legend.position = 'bottom',
legend.title = element_blank()) +
labs(y = 'Pupil Size')+
guides(color = guide_legend(override.aes = list(lwd = 20)))
#| message: false
#| warning: false
#| fig-height: 25
#| fig-width: 40
base_data <- baseline_data(data = Int_data,
pupil = mean_pupil,
start = -100,
stop = 0)
#| message: false
#| warning: false
#| fig-height: 25
#| fig-width: 40
One = plot(base_data, pupil = mean_pupil, group = 'condition')+
theme_bw(base_size = 45) +
theme(legend.position = 'none')
Two = ggplot(base_data, aes(x = Time, y = mean_pupil, group = TrialN, color = Events))+
geom_line(lwd =1.2)+
geom_vline(aes(xintercept = 0), linetype= 'dashed', color = 'black', lwd =1.2)+
facet_wrap(~Subject)+
theme_bw(base_size = 45) +
theme(
legend.position = 'bottom',
legend.title = element_blank()) +
labs(y = 'Pupil Size')+
guides(color = guide_legend(override.aes = list(lwd = 20)))
# Using patchwork to put the plot toghether
One / Two
#| message: false
#| warning: false
#| eco: false
write.csv('"..\\..\\resources\\Pupillometry\\ProcessedPupilData.csv"')
#| message: false
#| warning: false
#| fig-height: 25
#| fig-width: 40
One = plot(Base_data, pupil = mean_pupil, group = 'condition')+
theme_bw(base_size = 45) +
theme(legend.position = 'none')
#| message: false
#| warning: false
#| fig-height: 25
#| fig-width: 40
Base_data <- baseline_data(data = Int_data,
pupil = mean_pupil,
start = -100,
stop = 0)
#| message: false
#| warning: false
#| fig-height: 25
#| fig-width: 40
One = plot(Base_data, pupil = mean_pupil, group = 'condition')+
theme_bw(base_size = 45) +
theme(legend.position = 'none')
Two = ggplot(Base_data, aes(x = Time, y = mean_pupil, group = TrialN, color = Events))+
geom_line(lwd =1.2)+
geom_vline(aes(xintercept = 0), linetype= 'dashed', color = 'black', lwd =1.2)+
facet_wrap(~Subject)+
theme_bw(base_size = 45) +
theme(
legend.position = 'bottom',
legend.title = element_blank()) +
labs(y = 'Pupil Size')+
guides(color = guide_legend(override.aes = list(lwd = 20)))
# Using patchwork to put the plot toghether
One / Two
#| message: false
#| warning: false
#| eco: false
write.csv(Base_data,"..\\..\\resources\\Pupillometry\\ProcessedPupilData.csv")
